1143. Longest Common Subsequence
Medium

6927

75

Add to List

Share
Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.

A subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.

For example, "ace" is a subsequence of "abcde".
A common subsequence of two strings is a subsequence that is common to both strings.


class Solution {
    static int memo[][];
    public int longestCommonSubsequence(String t1, String t2) {
        int n=t1.length();
        int m=t2.length();
        memo=new int[n+1][m+1];
    for(int[] i: memo)
	    {
	        Arrays.fill(i,-1);
	    }
        int ans=lcs(t1,t2,n,m);
        return ans;
            
    }
    static int lcs(String s1,String s2,int n,int m){
      if(memo[n][m]!=-1)
                return memo[n][m];
                
            if(n==0 || m==0)
                memo[n][m]=0;
                
            else
            {
                if(s1.charAt(n-1)==s2.charAt(m-1))
                    memo[n][m] = 1 + lcs(s1,s2,n-1,m-1);
                else
                    memo[n][m] = Math.max(lcs(s1,s2,n-1,m),lcs(s1,s2,n,m-1));
            }
            
            return memo[n][m];
    }
}