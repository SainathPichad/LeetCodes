

416. Partition Equal Subset Sum
Medium

7738

123

Add to List

Share
Given a non-empty array nums containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.

 

Example 1:

Input: nums = [1,5,11,5]
Output: true
Explanation: The array can be partitioned as [1, 5, 5] and [11].


class Solution {
    public boolean canPartition(int[] arr) {
        int N=arr.length;
           int sum=0;
        for(int i:arr){
            sum+=i;
        }
        if(sum%2!=0){
            return false;
        }
        if( is(arr,N,sum/2)==true){
            return true;
        }
        
        return false;
    }
      static boolean is(int a[],int n,int sum){
        boolean dp[][]=new boolean[sum+1][n+1];
        for(int i=0;i<=n;i++){
            dp[0][i]=true;
        }
         for(int i=1;i<=sum;i++){
            dp[i][0]=false;
        }
        for(int i=1;i<=sum;i++){
            for(int j=1;j<=n;j++){
                dp[i][j]=dp[i][j-1];
                if(i>=a[j-1]){
                    dp[i][j]=dp[i][j]||dp[i-a[j-1]][j-1];
                }
            }
        }
        return dp[sum][n];
    }
}